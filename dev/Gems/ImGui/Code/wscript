########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################


def build(bld):

    configBasedDefines=[]
    platformDefines=[]
    if bld.env['CONFIGURATION'] == 'profile' or bld.env['CONFIGURATION'] == 'debug':
        configBasedDefines=['IMGUI_ENABLED']
    if bld.env['PLATFORM'] != 'win':
        platformDefines=['IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS', 'IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS']

    bld.CryEngineSharedLibrary(
        target='imguilib',
        vs_filter='Gems/ImguiLib',
        platforms = ['all'],
        configurations = ['all'],
        file_list = ['imgui_lib.waf_files'],
        defines = configBasedDefines + platformDefines,
        export_includes=[bld.Path('Gems/ImGui/External/ImGui/v1.53')],
        export_defines=['IMGUI_API_IMPORT']
    )

    bld.DefineGem(
        includes=[bld.Path('Code/CryEngine/CryAction')],
        use=['imguilib'],
        test_all_file_list = ['imgui_test.waf_files'],
        file_list = [ 'imgui_common.waf_files', 'imgui_game.waf_files'],
        defines     = configBasedDefines,

        ########################################
        # Editor Gem configuration
        editor = dict(
            includes=[bld.Path('Code/CryEngine/CryAction'),
                      bld.Path('Code/Sandbox/Plugins/EditorCommon'),
                      bld.Path('Code/Sandbox/Editor')],
            use=['imguilib', 'AzToolsFramework', 'AzQtComponents'],
            test_all_file_list = ['imgui_test.waf_files'],
            file_list = [ 'imgui_common.waf_files', 'imgui_editor.waf_files'],
            defines     = configBasedDefines,

            uselib=['QT5CORE','QT5GUI','QT5WIDGETS'],

            features=['qt5']
        )
        ########################################
    )
